name: Build and Package KMM Project

on:
  push:
    branches:
      - main
      - develop
      - master
  pull_request:
    branches:
      - main
      - develop

jobs:
  android-build:
    name: Build Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant Execute Permission for Gradlew
        run: chmod +x gradlew

      - name: Build Android Debug APK
        run: ./gradlew assembleDebug

      - name: Run Android Unit Tests
        run: ./gradlew testDebugUnitTest

  ios-build:
    name: Build iOS
    runs-on: macos-latest
    # Removed dependency on android-build to allow parallel execution
    # If shared KMM code needs to be built first, keep the dependency
    # needs: android-build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Install CocoaPods
        run: sudo gem install cocoapods

      - name: Install iOS Dependencies
        working-directory: iosApp  # Ensures pod install runs in the correct directory
        run: pod install

      - name: Build iOS Framework
        run: ./gradlew linkDebugFrameworkIosSimulatorArm64  # Adjusted for M1 simulators

      - name: Run iOS Unit Tests
        run: ./gradlew iosSimulatorArm64Test  # Updated test target for M1

  dmg-build:
    name: Package DMG
    runs-on: macos-latest
    needs: [android-build, ios-build]  # Only if actually dependent on other builds

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build DMG Package
        run: ./gradlew packageDmg  # Common task name when using jpackage

      - name: Upload DMG Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-dmg
          path: build/compose/binaries/main/dmg/MyApp.dmg  # Example jpackage output path

  msi-build:
    name: Package MSI
    runs-on: windows-latest
    needs: android-build  # Only if dependent on Android build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build MSI Package
        run: .\gradlew packageMsi  # Adjusted for jpackage task

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-msi
          path: build/compose/binaries/main/msi/MyApp.msi  # Wildcard path if versioned

  deb-build:
    name: Package DEB
    runs-on: ubuntu-latest
    needs: android-build  # Only if dependent

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build DEB Package
        run: ./gradlew packageDeb  # Adjusted for jpackage

      - name: Upload DEB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-deb
          path: build/compose/binaries/main/deb/MyApp.deb
